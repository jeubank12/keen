// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tooltip /> should not render box shadow 1`] = `
.c0 {
  padding: 10px 15px;
  box-sizing: border-box;
  background-color: #FFFFFF;
  border-radius: 0px;
  font-size: undefinedpx;
  color: #3A494D;
  box-shadow: none;
  position: relative;
  background-color: rgba(255,255,255,0.95);
  color: #3A494D;
}

.c0::after {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  box-sizing: border-box;
  border: 4px solid #FFFFFF;
  box-shadow: none;
  border-color: transparent transparent rgba(255,255,255,0.95) rgba(255,255,255,0.95);
  top: auto;
  bottom: 1px;
  left: 50%;
  right: auto;
  -webkit-transform: rotate(-45deg) translateX(-50%) translateX(-2px);
  -ms-transform: rotate(-45deg) translateX(-50%) translateX(-2px);
  transform: rotate(-45deg) translateX(-50%) translateX(-2px);
}

<Tooltip
  arrowDirection="bottom"
  backgroundColor="#FFFFFF"
  borderRadius="0px"
  fontColor="#3A494D"
  hasArrow={true}
  hasShadow={false}
  mode="light"
>
  <styled.div
    arrowDirection="bottom"
    backgroundColor="#FFFFFF"
    borderRadius="0px"
    fontColor="#3A494D"
    hasArrow={true}
    hasShadow={false}
    mode="light"
  >
    <StyledComponent
      arrowDirection="bottom"
      backgroundColor="#FFFFFF"
      borderRadius="0px"
      fontColor="#3A494D"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
  box-sizing: border-box;
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  font-family: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: ",
              [Function],
              ";
  position: relative;
  ",
              [Function],
              "
  &::after {
    ",
              [Function],
              "
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    box-sizing: border-box;
    border: ",
              "4",
              "px solid ",
              [Function],
              ";
    box-shadow: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasArrow={true}
      hasShadow={false}
      mode="light"
    >
      <div
        className="c0"
        mode="light"
      >
        tooltip
      </div>
    </StyledComponent>
  </styled.div>
</Tooltip>
`;

exports[`<Tooltip /> should render \`dark-mode\` 1`] = `
.c0 {
  padding: 10px 15px;
  box-sizing: border-box;
  background-color: #FFFFFF;
  border-radius: 0px;
  font-size: undefinedpx;
  color: #3A494D;
  box-shadow: 0 10px 24px 0 rgba(29,39,41,0.15);
  position: relative;
  background-color: rgba(58,73,77,0.95);
  color: #FFFFFF;
}

.c0::after {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  box-sizing: border-box;
  border: 4px solid #FFFFFF;
  box-shadow: -3px 3px 24px 0 rgba(29,39,41,0.15);
  border-color: transparent transparent rgba(58,73,77,0.95) rgba(58,73,77,0.95);
  top: auto;
  bottom: 1px;
  left: 50%;
  right: auto;
  -webkit-transform: rotate(-45deg) translateX(-50%) translateX(-2px);
  -ms-transform: rotate(-45deg) translateX(-50%) translateX(-2px);
  transform: rotate(-45deg) translateX(-50%) translateX(-2px);
}

<Tooltip
  arrowDirection="bottom"
  backgroundColor="#FFFFFF"
  borderRadius="0px"
  fontColor="#3A494D"
  hasArrow={true}
  hasShadow={true}
  mode="dark"
>
  <styled.div
    arrowDirection="bottom"
    backgroundColor="#FFFFFF"
    borderRadius="0px"
    fontColor="#3A494D"
    hasArrow={true}
    hasShadow={true}
    mode="dark"
  >
    <StyledComponent
      arrowDirection="bottom"
      backgroundColor="#FFFFFF"
      borderRadius="0px"
      fontColor="#3A494D"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
  box-sizing: border-box;
  background-color: ",
              [Function],
              ";
  border-radius: ",
              [Function],
              ";
  font-family: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  box-shadow: ",
              [Function],
              ";
  position: relative;
  ",
              [Function],
              "
  &::after {
    ",
              [Function],
              "
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    box-sizing: border-box;
    border: ",
              "4",
              "px solid ",
              [Function],
              ";
    box-shadow: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasArrow={true}
      hasShadow={true}
      mode="dark"
    >
      <div
        className="c0"
        mode="dark"
      >
        tooltip
      </div>
    </StyledComponent>
  </styled.div>
</Tooltip>
`;
